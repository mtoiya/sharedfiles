""""""""""
" pathogen

" .vim/bundle/plugin_nameを読み込むようにする
call pathogen#incubate()

call pathogen#helptags()





""""""""""
" unite.vim

" 入力モードで開始する
let g:unite_enable_start_insert = 1

" 以下を候補とする。
"  - バッファ
"  - 最近使ったファイルの一覧
"  - ファイル
"  - ファイル（再帰検索）
" （buffer-nameをfilesにすると、/区切りでワイルドカードが自動的に付加される。）
nnoremap <silent> ,j :<C-u>Unite -buffer-name=files buffer file_mru<CR>
nnoremap <silent> ,cj :<C-u>UniteWithCurrentDir -buffer-name=files buffer<CR>
"nnoremap <silent> ,bj :<C-u>UniteWithBufferDir -buffer-name=files -prompt=%\  buffer file_mru<CR>

" ファイル
nnoremap <silent> ,f :<C-u>Unite -buffer-name=files file<CR>
nnoremap <silent> ,F :<C-u>Unite -buffer-name=files file file_rec<CR>

" バッファ
nnoremap <silent> ,b :<C-u>Unite buffer<CR>

" ブックマーク
nnoremap <silent> ,m :<C-u>Unite bookmark<CR>
" ブックマークを追加
nnoremap <silent> ,a :<C-u>UniteBookmarkAdd<CR>

" grep
nnoremap <silent> ,g :<C-u>Unite -no-quit grep -buffer-name=grep<CR>
nnoremap <silent> ,G :<C-u>Unite -no-quit grep -buffer-name=grep
" ソースコード内検索用grep
nnoremap <silent> ,s :<C-u>Unite -no-quit grep::--include='*.h'\ --include='*.hpp'\ --include='*.c'\ --include='*.cpp'\ --include='*.m'\ --include='*.mm'\ --include='*.inl'\  -buffer-name=grep<CR>
nnoremap <silent> ,S :<C-u>Unite -no-quit grep::--include='*.h'\ --include='*.hpp'\ --include='*.c'\ --include='*.cpp'\ --include='*.m'\ --include='*.mm'\ --include='*.inl'\  -buffer-name=grep

" バッファ内検索
nnoremap <silent> ,l :<C-u>Unite -no-quit line<CR>
nnoremap <silent> ,wl :<C-u>UniteWithCursorWord -no-quit line<CR>

" タグ
nnoremap <silent> ,t :<C-u>Unite tag -buffer-name=tag<CR>
nnoremap <silent> ,T :<C-u>Unite tag -buffer-name=tag
nnoremap <silent> ,wt :<C-u>UniteWithCursorWord -immediately tag -buffer-name=tag<CR>
nnoremap <silent> ,wT :<C-u>UniteWithCursorWord -immediately tag -buffer-name=tag

" Uniteバッファ
nnoremap <silent> ,r :<C-u>Unite resume<CR>

" キーマップ
nnoremap <silent> ,k :<C-u>Unite mapping<CR>

" アウトライン（未インストール）
"nnoremap <silent> <Space>o :<C-u>Unite outline<CR>

" ウィンドウを分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-S> unite#do_action('split')
au FileType unite inoremap <silent> <buffer> <expr> <C-S> unite#do_action('split')

" ウィンドウを縦に分割して開く
au FileType unite nnoremap <silent> <buffer> <expr> <C-V> unite#do_action('vsplit')
au FileType unite inoremap <silent> <buffer> <expr> <C-V> unite#do_action('vsplit')

" unite-grepの候補最大数を設定します。
let g:unite_source_grep_max_candidates=10000





""""""""""
" カレントディレクトリ移動のためのキーマッピングを定義
"	CDというコマンドを定義し、,cdに割り当てる。コマンドが引数なしで呼び出されたときは、現在開いているファイルと同じディレクトリに移動し、そうでない場合は引数のディレクトリに移動。
"	:CD!として呼び出された場合、移動先のカレントディレクトリを表示し、どこに移動したのかを分かり易くする。
"	-> http://vim-users.jp/2009/09/hack69/

command! -nargs=? -complete=dir -bang CD  call s:ChangeCurrentDir('<args>', '<bang>') 
function! s:ChangeCurrentDir(directory, bang)
    if a:directory == ''
        lcd %:p:h
    else
        execute 'lcd' . a:directory
    endif

    if a:bang == ''
        pwd
    endif
endfunction

" Change current directory.
"nnoremap <silent> ,cd :<C-u>CD<CR>





""""""""""
" 日本語入力固定モード

" 「日本語入力固定モード」の動作モード
let IM_CtrlMode = 4

" 「日本語入力固定モード」切替キー
inoremap <silent> <C-k> <C-^><C-r>=IMState('FixMode')<CR>





""""""""""
" その他の環境設定

set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

" ツールバーを非表示にする
set guioptions-=T

" スクロールバーを非表示にする
set guioptions-=rL

" GUIバージョンでなければマウス操作を無効にする
if !has("gui_running")
  set mouse=
endif

" タグファイル
set tags=TAGS

" バックアップディレクトリ
if has("unix")
  set backupdir=~/tmp
elseif has("win32")
  set backupdir=~/tmp
endif

nnoremap ; :

" インサートモードからノーマルモードへの切り替えを楽にします。
inoremap <C-j> <ESC>





""""""""""
" Windows固有の設定

if has("win32")

  " Swapファイルを作らない
  set noswapfile

  " メニューバーを非表示にする
  set guioptions-=m

  " grepツール
  "set grepprg="D:/Applications/GnuWin32/bin/grep.exe"
  "let g:unite_source_grep_command="D:/Applications/GnuWin32/bin/grep.exe"

  " SVNの設定（途中）
  "let g:VCSCommandSVNExec = $ProgramFiles . "/Subversion/bin/svn.exe"

  " 起動時のディレクトリ設定
  cd C:/Users/toiya
endif
